/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui.form.evidencijaTermina;

import domain.EvidencijaTermina;
import domain.Frizer;
import domain.Musterija;
import domain.StavkaTermina;
import domain.Usluga;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import modeli.ModelTabeleStavkeTermina;
import ui.controller.ClientController;

/**
 *
 * @author Sreja
 */
public class EvidencijaTerminaForma extends javax.swing.JFrame {

    private List<StavkaTermina> stavkeTermina = new ArrayList<>();
    private List<Usluga> usluge = new ArrayList<>();
    private ModelTabeleStavkeTermina mtst;
    private JComboBox<Usluga> jComboBoxUsluge = new JComboBox<>();
    private EvidencijaTermina evidencijaTermina;
    private long idEvidencijaTermina;
    private PretraziEvidencijuForma pef;

    /**
     * Creates new form EvidencijaTerminaForma
     */
    public EvidencijaTerminaForma() throws Exception {
        initComponents();
        setLocationRelativeTo(null);
        popuniComboBoxFrizerima();
        popuniComboBoxMusterijama();
        popuniComboBoxUslugama();
        postaviModelTabeleStavkeTermina();
        onemoguciPolja();
        jLabelUkupanIznos.setText(0.0 + "");
        jLabelUkupnoTrajanje.setText("0 min");
        jLabelDatumIVremeKraja.setText("N/A");
    }

    public EvidencijaTerminaForma(List<StavkaTermina> stavkeTermina) throws Exception {
        initComponents();
        setLocationRelativeTo(null);
        popuniComboBoxFrizerima();
        popuniComboBoxMusterijama();
        popuniComboBoxUslugama();
        this.stavkeTermina = stavkeTermina;
        postaviModelTabeleStavkeTermina();
        promeniUkupanIznos(stavkeTermina);
    }

    public EvidencijaTermina getEvidencijaTermina() {
        return evidencijaTermina;
    }

    public void setEvidencijaTermina(EvidencijaTermina evidencijaTermina) {
        this.evidencijaTermina = evidencijaTermina;
    }

    public PretraziEvidencijuForma getPef() {
        return pef;
    }

    public void setPef(PretraziEvidencijuForma pef) {
        this.pef = pef;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxFrizeri = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxMusterije = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldDatumIVremePocetka = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaOpis = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableStavkeTermina = new javax.swing.JTable();
        jButtonDodajStavku = new javax.swing.JButton();
        jButtonObrisiStavku = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabelUkupanIznos = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabelUkupnoTrajanje = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabelDatumIVremeKraja = new javax.swing.JLabel();
        jButtonKreiraj = new javax.swing.JButton();
        jButtonZapamti = new javax.swing.JButton();
        jButtonOtkazi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Frizer:");

        jLabel2.setText("Musterija:");

        jComboBoxMusterije.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMusterijeActionPerformed(evt);
            }
        });

        jLabel3.setText("Datum i vreme pocetka:");

        jLabel4.setText("Opis:");

        jTextAreaOpis.setColumns(20);
        jTextAreaOpis.setRows(5);
        jScrollPane1.setViewportView(jTextAreaOpis);

        jTableStavkeTermina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableStavkeTermina);

        jButtonDodajStavku.setText("Dodaj stavku");
        jButtonDodajStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajStavkuActionPerformed(evt);
            }
        });

        jButtonObrisiStavku.setText("Obrisi stavku");
        jButtonObrisiStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiStavkuActionPerformed(evt);
            }
        });

        jLabel7.setText("Ukupan iznos:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel5.setText("dd.MM.yyyy HH:mm");

        jLabelUkupanIznos.setText("jLabel6");

        jLabel6.setText("Ukupno trajanje:");

        jLabelUkupnoTrajanje.setText("jLabel8");

        jLabel8.setText("Datum i vreme kraja:");

        jLabelDatumIVremeKraja.setText("jLabel9");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelUkupanIznos, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelUkupnoTrajanje, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonDodajStavku)
                            .addComponent(jButtonObrisiStavku, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxFrizeri, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxMusterije, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelDatumIVremeKraja, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(28, 28, 28)
                                            .addComponent(jLabel5)
                                            .addGap(27, 27, 27))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jTextFieldDatumIVremePocetka))))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(27, 27, 27))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxFrizeri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxMusterije, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldDatumIVremePocetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabelDatumIVremeKraja))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabelUkupanIznos)
                            .addComponent(jLabel6)
                            .addComponent(jLabelUkupnoTrajanje)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonDodajStavku)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonObrisiStavku)))
                .addContainerGap())
        );

        jButtonKreiraj.setText("Kreiraj");
        jButtonKreiraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonKreirajActionPerformed(evt);
            }
        });

        jButtonZapamti.setText("Zapamti");
        jButtonZapamti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZapamtiActionPerformed(evt);
            }
        });

        jButtonOtkazi.setText("Otkazi");
        jButtonOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOtkaziActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonOtkazi)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(25, 25, 25)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(148, 148, 148)
                            .addComponent(jButtonKreiraj)
                            .addGap(76, 76, 76)
                            .addComponent(jButtonZapamti))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonKreiraj)
                    .addComponent(jButtonZapamti))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonOtkazi)
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxMusterijeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMusterijeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxMusterijeActionPerformed

    private void jButtonDodajStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajStavkuActionPerformed
        StavkaTermina stavkaTermina = new StavkaTermina();
        mtst.dodajStavku(stavkaTermina);
    }//GEN-LAST:event_jButtonDodajStavkuActionPerformed

    private void jButtonObrisiStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiStavkuActionPerformed
        int selektovaniRed = jTableStavkeTermina.getSelectedRow();
        if (selektovaniRed == -1) {
            JOptionPane.showMessageDialog(this, "Niste izabrali stavku termina!", "Upozorenje", JOptionPane.WARNING_MESSAGE);
            return;
        }
        mtst.obrisiStavku(selektovaniRed);
        promeniUkupanIznos(mtst.getStavkeTermina());
    }//GEN-LAST:event_jButtonObrisiStavkuActionPerformed

    private void jButtonKreirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonKreirajActionPerformed
        try {
            evidencijaTermina = ClientController.getInstance().kreirajEvidencijaTermina();
            idEvidencijaTermina = evidencijaTermina.getIdEvidencijaTermina();
            JOptionPane.showMessageDialog(this, "Sistem je kreirao evidenciju termina!", "Obavestenje!", JOptionPane.INFORMATION_MESSAGE);
            omoguciPolja();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da kreira evidenciju termina!", "Greska!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonKreirajActionPerformed

    private void jButtonZapamtiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZapamtiActionPerformed
        try {
            if (jTextFieldDatumIVremePocetka.getText().equals("") || jTextAreaOpis.getText().equals("") || jComboBoxFrizeri.getSelectedItem() == null
                    || jComboBoxMusterije.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(this, "Sva polja moraju biti popunjena!", "Upozorenje!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Frizer frizer = (Frizer) jComboBoxFrizeri.getSelectedItem();
            Musterija musterija = (Musterija) jComboBoxMusterije.getSelectedItem();
            stavkeTermina = mtst.getStavkeTermina();
            if(stavkeTermina.isEmpty()){
                    JOptionPane.showMessageDialog(this, "Morate dodati barem jednu stavku!", "Upozorenje!", JOptionPane.WARNING_MESSAGE);
                    return;
            }
            for (StavkaTermina stavkaTermina : stavkeTermina) {
                if (stavkaTermina.getNapomena() == null || stavkaTermina.getUsluga() == null) {
                    JOptionPane.showMessageDialog(this, "Sva polja moraju biti popunjena!", "Upozorenje!", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }
            SimpleDateFormat format = new SimpleDateFormat("dd.MM.yyyy HH:mm");
            Date datumVremePocetka = null;
            try {
                datumVremePocetka = format.parse(jTextFieldDatumIVremePocetka.getText());
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "Format datuma i vremena pocetka nije dobar!", "Upozorenje!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            String opis = jTextAreaOpis.getText();
            idEvidencijaTermina = evidencijaTermina.getIdEvidencijaTermina();
            evidencijaTermina = new EvidencijaTermina(idEvidencijaTermina, datumVremePocetka, opis, frizer, musterija, stavkeTermina);
            ClientController.getInstance().promeniEvidencijaTermina(evidencijaTermina);
            if (pef != null) {
                pef.popuniTabeluEvidencijeTermina();
            }
            JOptionPane.showMessageDialog(this, "Sistem je zapamtio evidenciju termina!", "Obavestenje!", JOptionPane.INFORMATION_MESSAGE);
            if (jButtonKreiraj.isVisible()) {
                isprazniPolja();
                onemoguciPolja();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti evidenciju termina!", "Greska!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonZapamtiActionPerformed

    private void jButtonOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOtkaziActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonOtkaziActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDodajStavku;
    private javax.swing.JButton jButtonKreiraj;
    private javax.swing.JButton jButtonObrisiStavku;
    private javax.swing.JButton jButtonOtkazi;
    private javax.swing.JButton jButtonZapamti;
    private javax.swing.JComboBox<Object> jComboBoxFrizeri;
    private javax.swing.JComboBox<Object> jComboBoxMusterije;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelDatumIVremeKraja;
    private javax.swing.JLabel jLabelUkupanIznos;
    private javax.swing.JLabel jLabelUkupnoTrajanje;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableStavkeTermina;
    private javax.swing.JTextArea jTextAreaOpis;
    private javax.swing.JTextField jTextFieldDatumIVremePocetka;
    // End of variables declaration//GEN-END:variables

    private void popuniComboBoxFrizerima() throws Exception {
        List<Frizer> frizeri = ClientController.getInstance().vratiListuSviFrizer();
        jComboBoxFrizeri.setModel(new DefaultComboBoxModel<>(frizeri.toArray()));
        jComboBoxFrizeri.setSelectedItem(null);
    }

    private void popuniComboBoxMusterijama() throws Exception {
        List<Musterija> musterije = ClientController.getInstance().vratiListuSviMusterija();
        jComboBoxMusterije.setModel(new DefaultComboBoxModel<>(musterije.toArray()));
        jComboBoxMusterije.setSelectedItem(null);
    }

    private void postaviModelTabeleStavkeTermina() {
        mtst = new ModelTabeleStavkeTermina(stavkeTermina);
        jTableStavkeTermina.setModel(mtst);
        mtst.setEtf(this);
        jTableStavkeTermina.getColumnModel().getColumn(0).setPreferredWidth(10);
        jTableStavkeTermina.getColumnModel().getColumn(1).setPreferredWidth(40);
        jTableStavkeTermina.getColumnModel().getColumn(2).setPreferredWidth(55);
        jTableStavkeTermina.getColumnModel().getColumn(3).setPreferredWidth(40);
        jTableStavkeTermina.getColumnModel().getColumn(2).setCellEditor(new DefaultCellEditor(jComboBoxUsluge));
    }

    private void popuniComboBoxUslugama() {
        try {
            usluge = ClientController.getInstance().vratiListuSviUsluga();
            DefaultComboBoxModel<Usluga> uslugaModel = new DefaultComboBoxModel<>(usluge.toArray(new Usluga[0]));
            jComboBoxUsluge.setModel(uslugaModel);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void onemoguciPolja() {
        jComboBoxFrizeri.setEnabled(false);
        jComboBoxMusterije.setEnabled(false);
        jTextFieldDatumIVremePocetka.setEnabled(false);
        jTextAreaOpis.setEnabled(false);
        jButtonDodajStavku.setEnabled(false);
        jButtonObrisiStavku.setEnabled(false);
        jButtonKreiraj.setEnabled(true);
        jButtonZapamti.setEnabled(false);
    }

    public void omoguciPolja() {
        jComboBoxFrizeri.setEnabled(true);
        jComboBoxMusterije.setEnabled(true);
        jTextFieldDatumIVremePocetka.setEnabled(true);
        jTextAreaOpis.setEnabled(true);
        jButtonDodajStavku.setEnabled(true);
        jButtonObrisiStavku.setEnabled(true);
        jButtonKreiraj.setEnabled(false);
        jButtonZapamti.setEnabled(true);
    }

    private void isprazniPolja() {
        jComboBoxFrizeri.setSelectedItem(null);
        jComboBoxMusterije.setSelectedItem(null);
        jTextFieldDatumIVremePocetka.setText("");
        jTextAreaOpis.setText("");
        jLabelUkupanIznos.setText(0.0 + "");
        jLabelUkupnoTrajanje.setText("0 min");
        jLabelDatumIVremeKraja.setText("N/A");
        stavkeTermina = new ArrayList<>();
        postaviModelTabeleStavkeTermina();
    }

    void detalji() {
        jComboBoxFrizeri.setSelectedItem(evidencijaTermina.getFrizer());
        jComboBoxFrizeri.setEnabled(false);
        jComboBoxMusterije.setSelectedItem(evidencijaTermina.getMusterija());
        jComboBoxMusterije.setEnabled(false);
        jTextFieldDatumIVremePocetka.setText(getDatumString(evidencijaTermina.getDatumIVremePocetka()));
        jTextFieldDatumIVremePocetka.setEditable(false);
        jLabelDatumIVremeKraja.setText(getDatumString(evidencijaTermina.getDatumIVremeKraja()));
        jTextAreaOpis.setText(evidencijaTermina.getOpis());
        jTextAreaOpis.setEditable(false);
        jButtonDodajStavku.setEnabled(false);
        jButtonObrisiStavku.setEnabled(false);
        jButtonKreiraj.setVisible(false);
        jButtonZapamti.setVisible(false);
    }

    void izmena() {
        jComboBoxFrizeri.setSelectedItem(evidencijaTermina.getFrizer());
        jComboBoxMusterije.setSelectedItem(evidencijaTermina.getMusterija());
        jTextFieldDatumIVremePocetka.setText(getDatumString(evidencijaTermina.getDatumIVremePocetka()));
        jLabelDatumIVremeKraja.setText(getDatumString(evidencijaTermina.getDatumIVremeKraja()));
        jTextAreaOpis.setText(evidencijaTermina.getOpis());
        jButtonKreiraj.setVisible(false);
        jButtonZapamti.setVisible(true);
    }

    private String getDatumString(Date datum) {
        SimpleDateFormat format = new SimpleDateFormat("dd.MM.yyyy HH:mm");
        return format.format(datum);
    }

    public void promeniUkupanIznos(List<StavkaTermina> stavkeTermina) {
        double ukupanIznos = 0;
        double ukupnoTrajanje = 0;
        for (StavkaTermina stavkaTermina : stavkeTermina) {
            ukupanIznos += stavkaTermina.getIznosUsluge();
            if (stavkaTermina.getUsluga() != null) {
                ukupnoTrajanje += stavkaTermina.getUsluga().getTrajanje();
            }
        }
        jLabelUkupanIznos.setText(ukupanIznos + "");
        jLabelUkupnoTrajanje.setText(Math.round(ukupnoTrajanje) + " min");
        if (!jTextFieldDatumIVremePocetka.getText().equals("")) {
            Date datumIVremeKraja = null;
            SimpleDateFormat format = new SimpleDateFormat("dd.MM.yyyy HH:mm");
            Date datumVremePocetka = null;
            try {
                datumVremePocetka = format.parse(jTextFieldDatumIVremePocetka.getText());
                Calendar calendar = Calendar.getInstance();
                calendar.setTime(datumVremePocetka);
                calendar.add(Calendar.MINUTE, (int) ukupnoTrajanje);
                datumIVremeKraja = calendar.getTime();
                jLabelDatumIVremeKraja.setText(getDatumString(datumIVremeKraja));
            } catch (ParseException ex) {
            }
        }
    }
}
